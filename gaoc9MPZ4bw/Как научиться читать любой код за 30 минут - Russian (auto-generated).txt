а это коллеги меня зовут григорий я

технически евангелист vox имплант и уже

больше 15 лет я создаю софт

а twitter я завел полгода назад в связи

с этим меня не берут на европейские

конференции от слова совсем то есть я

подаю им интересный доклад они

спрашивают сколько фолловеров в твиттере

10 до

нет поэтому у меня к вам ко всем

огромная просьба фолловьте меня фоткайте

что я выступаю ты гаити и твити я

повторю свой twitter findall в конце еще

раз на предыдущем мозг о python junior я

рассказал про то что такое переменные я

дал очень странное определение что

переменные это возможность называть

штуки и не просто возможность называть

возможность называть с определенной

целью с целью обращаться к ним по имени

что резко отличает переменные вот

например переменных в математике и перри

называть а сегодня я продолжу

рассказывать про основы потому что

основы это клёво как уже сказали

предыдущие спикеры два раза я считал

программирование это новая область

которая появилась

индустриальная программирование большое

всего 20 лет назад мы практически не

умеем это делать такая современная

алхимия мы пытаемся смешивать какие-то

раствор иногда оно бабахает иногда

гомункулы вылезают и мало того

программирование контринтуитивно наш

мозг устроен так что он штуки строит

одна над другой когда мы с вами были

маленькие маленькими детьми мы поняли

что ага свет падает сверху

соответственно тени внизу и потом на

основании этого знания мы построили

другое знание что ток детей не то пол

а потом на основании этого знания мы

можем видеть множество клёвых оптических

иллюзий

которые это

эксплуатируют в хвост и в гриву так вот

программирование

она не связана ни с какими простыми

бытовыми вещами не над чем делать

надстройки

поэтому очень и очень тяжело мне тоже

тяжело я делаю много разного софтом не

нужны помощники я стараюсь нанимать

разработчиков разработчиков нет я

страдаю вот прямо сейчас вот мы общаемся

на head hunters мне там кнопочка

отказать одним кликом нажимается и я

стараюсь рассказывать про основы сегодня

я чуть-чуть расскажу про то как вообще

читать код на любом языке

программирования и поборюсь спицы и вот

я буду рассказывать а там быть пиццей у

вас будет тяжелый моральный выбор вот

бежать кушать или немножко послушать

меня что такое вообще программа любая

программа эта инструкция на каком-то

языке языке программирования

а что такое язык язык любой русский

python эсперанто это куча штук

именованных сами переменные плюс правило

что с этими штуками делать правило мы

обычно называем грамматикой орфографии и

синтаксиса морфологии там их много в

лингвистике

но для нас с вами наибольший интерес

представляет грамматика и и огромная

часть синтаксис потому что морфологии в

программировании нету а синтаксис это

такая штука которая позволяет нам писать

и считать сегодня я буду рассказывать

про

считать если мы хотим прочитать

какой-нибудь текст который кто-нибудь

написал то мы разбиваем текст на

именованные штуки например мама мыла

раму 3 именованные штуки после чего

применяем к этим штукам правило которое

позволит нам понять о чем вообще этот

текст

вот собственно говоря текст он на

русском языке

мы с вами более менее знаем синтаксис и

даже не побоюсь этого слова грамматика

русского языка

поэтому мы можем взять и воспользоваться

синтаксисом просто вот разбить этот

текст на 3 именованные штуки

одна из которых будет объект 2 будет

субъект

а третье будет м действие субъект мама

героически совершает действия над

объектом в русском языке мы определяем

что субъект что объекта что действие по

порядку сов предложения ну конечно еще

мы можем использовать запятые другие

трюки на вообще порядок есть другие

языки например японский у него пробелов

нету и не понятно что с ним делать но у

него есть

синтаксис и синтаксиса написано что надо

искать маркер и маркер и это вот такие

специальные значки

то что между маркерами это будет

субъект-объект действия а маркер

определяет чо это такое штука которая

находится последний это всегда действия

вот такой вот забавный язык если мы

знаем его синтаксис мы можем взять любую

японскую фразу взять список маркеров

тяжело вздохнуть и пойти их искать и к

там на самом деле не много всего 50 штук

а популярных 10 вот поэтому любой

японскую фразу достаточно быстро можете

раздробить на части начать определять

где тут субъект и объект и что же он с

ним родимом делает возьмем язык

программирования и совершим то же самое

непотребство ход и а оказалось что если

мы разобьем вот это вот фразу на языке

программирования python

то мы увидим идентификатор

оператор и литерал языке

программирования современные по крайней

мере большинство из них они не

среднее между русским и японским они

используют и пробелы чтобы разделять

предложения на кусочки и специальные

символы вот конкретно для языка

программирования python есть специальный

символ равно это оператор связи

он не требует пробела слева справа это

как в японском языке закорючки маркеры

если мы видим равно то то что слева а

это идентификатор а та что справа это

много разных интересных штук вот в юту

ареалах в книгах когда вот начинают

обучать а это очень похоже на шутку с

двумя кроликами да как обучить

математики посмотреть нас есть один

кролик у нас есть один кролик вместе их

два кролика теперь маленький

практический пример для закрепления

материала с программированием также

поэтому мне очень тяжело нанимать

разработчиков когда мы заглядываем в код

django

он выглядит вот так вот по сравнению с

тем что я написал а равно

единичка эта фраза на языке

программирования django выглядят им не

понятно да тут вот с первого раза ты не

совсем понятно что сказано но если мы с

вами знаем синтаксис языка

программирования python то мы можем

читать его точно также как русский или

английский в чем же заключается

синтаксис программирования синтаксис

языка программирования python

первое что нам нужно это найти парные

кавычки горизонтальные пробелы и

вертикальной пробелы

термин вертикальный пробил это на самом

деле enter вот его и вертикальным

пробелом называют итак мы их находим

и все сразу становится интереснее вот же

они после того как мы их нашли нам нужно

найти парные скобки и

спецсимволы но линь любые спит символа

тока те спецсимволы которые не в

кавычках потому что парные кавычки они

просто вот защищать

это что внутри них со страшной силой до

интерполяция и так мы находим скобки

спецсимволы

и видим что может практически все что

тут происходит можем поделить на кусочки

давайте это раскрасим чтобы нам было

более-менее видно я раскрасил все

кривятся но я хитер и коварен поэтому я

не только раскрашу но еще и раздвину

и теперь мы можем видеть что вот это

страшно на первый взгляд фразы на языке

программирования python

она состоит из кусочков мы можем разбить

любой код python на кусочки не зная paid

они практически ничего просто пользуюсь

простыми правилами о пробелах

кавычках спит символах и скобочках что

делает python дальше когда выполняет

этот код он делает магия магией творится

слева направо он слева направо берет

кусочки после чего для каждого кусочка

делает штуку которая называется его луис

мне очень нравится слово иглу и нить

иглу итить появитесь в это слово сегодня

услышите много раз делает он это в

соответствии с приоритетами начнем мы со

и в лейт когда python находит

какую-нибудь именно ванную штуку он

делает ей

его луис и получает еще одну штуку

которая называется

в л е что на русский язык переводится

как значение

а это первый момент на котором я хочу

сфокусировать ваше внимание все таких

моментов будет 2а штуки

которыми оперирует язык программирования

python да и вообще любой язык

программирования

именованные штуки они текст программы

там на самом деле конечно не тексте

сейчас все очень сильно упрощаю потому

что мне очень хочется чтобы это видео

было записано и потом я мог показывать

всем даже тем кто не умеет еще

программировать вот именованные штуки

это текст программы когда python их

начинать

по одной иглу и сеть то он их превращает

в какие-то байтики в памяти самом деле

это конечно не так в лиспе никогда не

была так но это очень и очень удобно для

объяснения поэтому берет кусочки которые

текст программы выполняет их и получает

какие-то данные в памяти

давайте посмотрим как два кролика

выглядит на практике вы открываете

python консоль вы можете это сделать

просто запустив python и вводите

единичку а потом нажимаете enter

вот единичка которую вы ввели это та

самая штука поэтому по нажатию enter

сразу же ее и в leaked и он вам в

консоли тоже показывает

единичку так вот то что он вам

показывает в консоли это как раз

результат и в рейтинга

так совпало что единичка она и вылечится

в циферку

который выглядит так же давайте

попробуем строчку вот вводим строчку в

кавычках нажимаем enter и она тоже

является в строчку до самый внимательный

могут заметить что кавычки разные но на

самом деле дело не в кавычках дело в том

что строка она в памятью тоже остается

строкой сюрприз сюрприз а вот если мы

например

по его этим вот такой кондишен экспресс

антон сразу станет falls

и тут-то мы понимаем что текст который

мы поэтому скормили а python выполнил он

превращается в какие-то разные данные

скормили единичку получали данные

единичка

скормили строчку привет получили данный

привет скормили

единичка равно двоечке получили фолз

фолз это булево значение который говорит

что нет не равно

а вот это вот единичка равно двоечке это

то что называется компаунд expression

потому что

именованных

лук может быть несколько этот мы

переходим ко второму интересному моменту

когда у пайтона случается несколько

именованных штук рядом

они в процессе иглу и i think a могут

использовать значение друг друга как это

происходит вот например о замечательной

именованные штуки 2 штук 2 равно

низкий приоритет поэтому и вылечиться

они будут в конце

на самом деле тоже нет но мне очень

очень удобно так рассказывать будем

считать что они иглу и тица в конце

и используют именованные штуки

слева и справа от себя это прям в

синтаксисе языка программирования python

если открыть пеп написано что оператор

drove двойное равно

использует результаты в lighting

экспресс на слева и справа

это позволяет вам читать конструкции на

python не любой сложности увидели

двойное равно ага вот у него есть то что

слева и у него есть та что справа вот и

он будет их и вы увидите по каким-то

правилам а когда я говорю про evaluating

лево и право я говорю про affinity это

вторая штука на который я хочу обратить

ваше внимание а у любой именованный

штуки в языке python и есть affinity

вот например у единички affinity нет

клево рассказывают о единички affinity

нет поэтому единичка она является в

единичку было был текст единичка стала

число а у плюсика affinity есть offense

не бывает разное

если у плюсика что-то написано слева и

справа то это плюсик который будет

что-то складывать

у него left a finite райт affinity а

если у плюсика что-то

столько справа то он не делает ничего он

говорит о том что значение положительно

если бы там был бы минус станок делала

значение отрицательно если у плюсика

что-то слева то в синтаксисе питон

написано что так делать нельзя потому

что у оператора плюс affinity либо

двухсторонняя

либо справа зато у замечательного

оператора скобочки которая вызывает есть

левое affinity поэтому если вы видите

штуку которая скобочки и смотрите в

синтаксисе какой у нее affinity то она

будет его итить то что слева а вот эту

вот affinity

и сайт эффекты позволяет вам являетесь

все

последний пример мы берем и его луи them

right

да мы вызываем метод

райт передав его строку а дальше мы

видим очень странно и мы видим что у нас

консоль вывелось две штуки у нас вывелся

текст у нас выявился 4mg что тут

произошло вообще что за от творится на

самом деле произошло все очень просто в

процессе его луи тинга функция write

сделала то для чего она предназначена

она вывела что-то в консоль

у нее спецификации написано что когда на

иглу и тица она берет то что в скобочках

и выводит в консоль а дальше синтаксис

языка программирования python показал

нам во что она появилась и

сюрприз если мы откроем спецификацию

окажется что write и вылечится в

количество выведенных символов 4 и вот у

нас образовалась 4 мы дальше можем

что-то с ним сделать например ничего

какие бывают а кусочки я стараюсь давать

термины последовательно тоже рассказал

про термин и валу ведь

я рассказал про термин affinity кошелек

миллера у нас 7 плюс-минус 2 будем

считать 5 поэтому я могу вам рассказать

не больше пяти разных терминах иначе вы

не сможете их удержать в памяти и так

какие бывают кусочки кусочки в языке

программирования python называются

экспрешены вот самый минимальный кусочек

он называется expression если он сам по

себе не имеет никакого affinity

и его лечится в какие-то данные то это

литерал вот например числовые литералы и

его лечиться в данный тип и число

строковые литералы выучиться в данные

типа строка литерал массива его лаять и

ться в массив он большой и страшный если

x экспресс он использует что-нибудь

слева направо то он компаунд если он

создает переменную тонн а assign мент а

если он что-нибудь проверяет то

candychan

а если считает то арифметик их на самом

деле в любом языке программирования

python не исключения достаточно много

а есть еще специальный кусочек который

называется statement statement нужен

потому что символов на клавиатуре не

хватило и statement вот многие опытные

программисты со мной категорически не

согласны отвлекись на секундочку

ты со мной согласен кивает но по страху

в глазах вижу что не очень уверен

statement это на самом деле костыль

синтаксиса программирования потому что в

идеальном языке программирования

например многие считают

лист идеальным языком программирования

вот там символов хватило потом все два

символа использует левая скобочкой

правая скобочка для всего вообще вот у

них проблем никаких нет но если мы хотим

сделать язык программирования

а который будет достаточно легко изучить

например python то мы не очень хотим

делать какие-то странные

последовательности символов давайте

сравним как например определение функции

или метода

сделанного java скрипте и в python и вот

в java скрипте используется спец

синтаксис определение функции

это скобочки который используется много

для чего еще равно вам одинарная который

используется много для чего еще и правая

угловая скобка которая тоже используется

для чего еще вот все вместе все вместе

это такой expression который валлийцы то

что в нем то что справа то что слева у

нас получается функция клёвой от

экспрессом можно использовать где угодно

а так он выглядит как-то

противоестественно а язык

программирования python

он создавался для того чтобы

разработчики не только могли делать

клевый софт на не могли быстро научиться

им использовать поэтому язык

программирования python использует

statement стоит именно такой

костыль который состоит из ключевого

слова dеf

из скобочек из : а он использует

переносы слов он использует отступы он

много всего использовать дайте им

подсвечу вот видите вот слева слева от

function дефиниция оператор это обычный

expression а справа это функция

дефиниция statement

язык программирования python они очень

отдельно смотрит проверяет он вот просто

бензопилой встроен в язык чтобы не

приходилось искать символ фунта на

клавиатуре и вот эта вот разница между

оператором и statement амано отличает

lisp от других языков программирования

все современные языки программирования

они используют то или иное количество

statement of такой баланс между

читаемостью кода и тем что его можно

как-то быстро написать я несколько раз

упомянул слово оператор в языках

программирования там у нас к сожалению

когда их создавали все эти именованные

штуки

каждый называл по-разному и до сих пор

какому-то единому стандарту мы они

пришлют на самом деле спецсимволы

чаще всего называют операторами еще

операторами называют куски statement of

return это оператор и операторы они в

очень сложных отношениях с экспресс

шинами то есть вот в какой-то книге

можно почитать что оператор является

экспресс шоном а в другой книге можно

почитать что нет на самом деле не

является в третьей книге можно

забуриться внутрь языка python

обнаружить что он строит развесистая

абстрактная синтаксическое дерево и там

вообще все сложно когда мы говорим про

affinity мы обычно говорим про операторы

поэтому когда говорил что у единички

есть affinity которые нет и это придумал

сам на самом деле синтаксис языка

программирования python про единички

affinity ничего не сказано find сказано

про плюс про минус про двойной равно вот

они внимательно следят за тем что слева

и тем что справа слева и справа какие-то

другие сложные expression и приоритет

выполнение это тоже про оператора кстати

про приоритет это будет 5 штук а о

которой я сегодня расскажу чтобы ни у

кого не взорвался мозг никого не

взрывается все нормалек

и так о приоритетах если откроете

справочник по языку программирования

python вы увидите вот такую

замечательную табличку

это табличка приоритетов операторов и

когда python выполняет слева направо ваш

код

а и находится оператор сложный

expression он их выполняет соответствии

с этой табличкой самый высокий приоритет

обладает скобки поэтому в начале python

найдет первую красную скобку и будет

выполнять заглядываем во синтаксис

python а чё делает оператор скобки

оператор скобки в лэти внутренних какой

полезный оператор далее мы находим ч

внутренних а второй оператор скобки он

тоже вылетит что внутренних ok

идем глубже далее мы находим оператор if

else

вот это даже нечто среднее между

экспрешены мы statement of iv она может

быть state ментам а вот в данном

конкретном случае у нас то специальный

expression if-else

экспресс нфл у него тоже есть правило мы

смотрим в учебник и в учебнике в

справочнике по языке программирования

python написано что и в лс сперва

смотрит на то что после iv если она true

то выполняется то что слева от их а если

она фолз то выполняется та что справа от

elf от такой оператор у которого есть

affinity ажно в трех слотах посерединке

слева и справа и такие бывают а пустой

как он выполнится в скобочках у нас

окажется либо минус процентов если

процентов с зависимости от того какой

был ордер и наконец выполняется процент

который а как выполняется

опять заглядываем справочник оператор

процент смотрит на то что слева и если

слева строка тон ее интерполирует а если

слева не строка то делать другие

страшные вещи и того вся наша вот это

страшная конструкция она схлопнулась до

минус имя

le plus имя в зависимости от озера

а все что мы использовали для того чтобы

ее прочитать это

разбили на кусочки а для каждого кусочка

определили что это

литерал или кондишен expression или

что-нибудь еще после чего заглянули

справочник посмотрели как же этот

кусочек hulu и ситца и применили правило

его рейтинг все пользуясь этим несложным

приемом вы можете прочитать любой код на

python и конечно вам потребуется еще 5

10 15 лет чтобы уметь понять любой код

на python не но уметь прочитать уметь

понять это разные умения про понимание

я вам расскажу на следующих лекциях

а

